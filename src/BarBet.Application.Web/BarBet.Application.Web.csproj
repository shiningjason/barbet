<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <LangVersion>12.0</LangVersion>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <SpaProxyServerUrl>http://localhost:5000</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>env SPA_SERVER_URL=$(SpaProxyServerUrl) npm start</SpaProxyLaunchCommand>
        <!-- Ignore rules: -->
        <!-- S101: Types should be named in PascalCase. (Because DTO/VO should be named in all uppercase. https://sonarsource.github.io/rspec/#/rspec/S101/csharp) -->
        <NoWarn>S101</NoWarn>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="13.0.1"/>
        <PackageReference Include="dotenv.net" Version="3.2.0"/>
        <PackageReference Include="Google.Apis.Auth" Version="1.68.0"/>
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.31"/>
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\BarBet.Common.Web\BarBet.Common.Web.csproj"/>
        <ProjectReference Include="..\BarBet.Message\BarBet.Message.csproj"/>
    </ItemGroup>
    <ItemGroup>
        <Content Update="appsettings*.json"
                 CopyToOutputDirectory="PreserveNewest"
                 CopyToPublishDirectory="PreserveNewest"/>
    </ItemGroup>
    <ItemGroup>
        <None Update="Config.tt">
            <Generator>TextTemplatingFileGenerator</Generator>
            <LastGenOutput>Config.cs</LastGenOutput>
        </None>
        <Compile Update="Config.cs">
            <AutoGen>True</AutoGen>
            <DesignTime>True</DesignTime>
            <DependentUpon>Config.tt</DependentUpon>
        </Compile>
    </ItemGroup>
    <ItemGroup>
        <Content Remove="$(SpaRoot)**"/>
        <None Remove="$(SpaRoot)**"/>
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
    </ItemGroup>
    <Target Name="EnsureNodeEnvInDebug" BeforeTargets="Build" Condition="'$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules')">
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    </Target>
    <Target Name="PublishSpa" AfterTargets="ComputeFilesToPublish">
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**"/>
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
